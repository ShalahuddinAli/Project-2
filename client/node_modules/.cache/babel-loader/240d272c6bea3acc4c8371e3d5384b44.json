{"ast":null,"code":"var _jsxFileName = \"/Users/shalahuddinali/Dropbox/My Mac (Shalahuddins-MacBook-Air.local)/Desktop/SEI-28/Project/project-2/src/pages/TrafficCam.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TrafficCard from \"../components/TrafficCard\";\nimport CamLocation from \"../CameraLocation\";\nimport CheckBoxes from \"../components/CheckBoxes\"; // const area = [\n// \t\"Ayer Rajah Expressway (AYE)\",\n// \t\"Bukit Timah Expressway (BKE)\",\n// \t\"Central Expressway (CTE)\",\n// \t\"East Coast Parkway (ECP)\",\n// \t\"Kallang-Paya Lebar Expressway (KPE)\",\n// \t\"Kranji Expressway (KJE)\",\n// \t\"Marina Coastal Expressway (MCE)\",\n// \t\"Pan-Island Expressway (PIE)\",\n// \t\"Sentosa Gateway\",\n// \t\"Seletar Expressway (SLE)\",\n// \t\"Tampines Expressway (TPE)\",\n// \t\"Tuas Checkpoint\",\n// \t\"Woodlands Checkpoint\",\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TrafficCam = () => {\n  _s();\n\n  const [trafficImg, setTrafficImg] = useState([]);\n  useEffect(() => {\n    const camImageUrl = \"https://api.data.gov.sg/v1/transport/traffic-images\";\n    axios.get(camImageUrl).then(res => {\n      // console.log(res.data.items[0].cameras);\n      setTrafficImg(res.data.items[0].cameras);\n    });\n  }, []);\n  const area = [\"All\"];\n\n  for (const element of CamLocation) {\n    if (area.indexOf(element.area) === -1) {\n      area.push(element.area); // console.log(area);\n    }\n  } // console.log(area);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Traffic Cameras\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CheckBoxes, {\n        area: area\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: trafficImg && trafficImg.map(element => CamLocation.map(item => {\n          if (element.camera_id === item.camera_id) return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TrafficCard, {\n              img: element.image,\n              location: element.location,\n              id: element.camera_id,\n              road: item.location,\n              cluster: item.area\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this)\n          }, element.camera_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 12\n          }, this);\n        }) // if (element.camera_id === CamLocation)\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TrafficCam, \"Z2tlOM2wQUMYQ//16PSpg8tnUyo=\");\n\n_c = TrafficCam;\nexport default TrafficCam;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrafficCam\");","map":{"version":3,"sources":["/Users/shalahuddinali/Dropbox/My Mac (Shalahuddins-MacBook-Air.local)/Desktop/SEI-28/Project/project-2/src/pages/TrafficCam.js"],"names":["axios","React","useEffect","useState","Container","Box","Typography","Grid","TrafficCard","CamLocation","CheckBoxes","TrafficCam","trafficImg","setTrafficImg","camImageUrl","get","then","res","data","items","cameras","area","element","indexOf","push","map","item","camera_id","image","location"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMY,WAAW,GAAG,qDAApB;AAEAd,IAAAA,KAAK,CAACe,GAAN,CAAUD,WAAV,EAAuBE,IAAvB,CAA6BC,GAAD,IAAS;AACpC;AACAJ,MAAAA,aAAa,CAACI,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,OAAnB,CAAb;AACA,KAHD;AAIA,GAPQ,EAON,EAPM,CAAT;AASA,QAAMC,IAAI,GAAG,CAAC,KAAD,CAAb;;AACA,OAAK,MAAMC,OAAX,IAAsBb,WAAtB,EAAmC;AAClC,QAAIY,IAAI,CAACE,OAAL,CAAaD,OAAO,CAACD,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACtCA,MAAAA,IAAI,CAACG,IAAL,CAAUF,OAAO,CAACD,IAAlB,EADsC,CAEtC;AACA;AACD,GAlBuB,CAmBxB;;;AACA,sBACC;AAAA,2BACC,QAAC,SAAD;AAAW,MAAA,OAAO,EAAC,QAAnB;AAAA,8BACC,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,MAAb;AAAoB,QAAA,cAAc,EAAC,QAAnC;AAAA,+BACC,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAJD,eAMC,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,kBACET,UAAU,IACVA,UAAU,CAACa,GAAX,CACEH,OAAD,IACCb,WAAW,CAACgB,GAAZ,CAAiBC,IAAD,IAAU;AACzB,cAAIJ,OAAO,CAACK,SAAR,KAAsBD,IAAI,CAACC,SAA/B,EACC,oBACC,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACC,QAAC,WAAD;AACC,cAAA,GAAG,EAAEL,OAAO,CAACM,KADd;AAEC,cAAA,QAAQ,EAAEN,OAAO,CAACO,QAFnB;AAGC,cAAA,EAAE,EAAEP,OAAO,CAACK,SAHb;AAIC,cAAA,IAAI,EAAED,IAAI,CAACG,QAJZ;AAKC,cAAA,OAAO,EAAEH,IAAI,CAACL;AALf;AAAA;AAAA;AAAA;AAAA;AADD,aAAgBC,OAAO,CAACK,SAAxB;AAAA;AAAA;AAAA;AAAA,kBADD;AAWD,SAbD,CAFF,CAgBC;AAhBD;AAFF;AAAA;AAAA;AAAA;AAAA,cAND;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAgCA,CApDD;;GAAMhB,U;;KAAAA,U;AAsDN,eAAeA,UAAf","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TrafficCard from \"../components/TrafficCard\";\nimport CamLocation from \"../CameraLocation\";\nimport CheckBoxes from \"../components/CheckBoxes\";\n\n// const area = [\n// \t\"Ayer Rajah Expressway (AYE)\",\n// \t\"Bukit Timah Expressway (BKE)\",\n// \t\"Central Expressway (CTE)\",\n// \t\"East Coast Parkway (ECP)\",\n// \t\"Kallang-Paya Lebar Expressway (KPE)\",\n// \t\"Kranji Expressway (KJE)\",\n// \t\"Marina Coastal Expressway (MCE)\",\n// \t\"Pan-Island Expressway (PIE)\",\n// \t\"Sentosa Gateway\",\n// \t\"Seletar Expressway (SLE)\",\n// \t\"Tampines Expressway (TPE)\",\n// \t\"Tuas Checkpoint\",\n// \t\"Woodlands Checkpoint\",\n// ];\n\nconst TrafficCam = () => {\n\tconst [trafficImg, setTrafficImg] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst camImageUrl = \"https://api.data.gov.sg/v1/transport/traffic-images\";\n\n\t\taxios.get(camImageUrl).then((res) => {\n\t\t\t// console.log(res.data.items[0].cameras);\n\t\t\tsetTrafficImg(res.data.items[0].cameras);\n\t\t});\n\t}, []);\n\n\tconst area = [\"All\"];\n\tfor (const element of CamLocation) {\n\t\tif (area.indexOf(element.area) === -1) {\n\t\t\tarea.push(element.area);\n\t\t\t// console.log(area);\n\t\t}\n\t}\n\t// console.log(area);\n\treturn (\n\t\t<div>\n\t\t\t<Container justify=\"center\">\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t<Typography variant=\"h3\">Traffic Cameras</Typography>\n\t\t\t\t</Box>\n\t\t\t\t<CheckBoxes area={area} />\n\n\t\t\t\t<Grid container>\n\t\t\t\t\t{trafficImg &&\n\t\t\t\t\t\ttrafficImg.map(\n\t\t\t\t\t\t\t(element) =>\n\t\t\t\t\t\t\t\tCamLocation.map((item) => {\n\t\t\t\t\t\t\t\t\tif (element.camera_id === item.camera_id)\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Grid item key={element.camera_id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TrafficCard\n\t\t\t\t\t\t\t\t\t\t\t\t\timg={element.image}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlocation={element.location}\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={element.camera_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\troad={item.location}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcluster={item.area}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t// if (element.camera_id === CamLocation)\n\t\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default TrafficCam;\n"]},"metadata":{},"sourceType":"module"}