{"ast":null,"code":"var _jsxFileName = \"/Users/shalahuddinali/Dropbox/My Mac (Shalahuddins-MacBook-Air.local)/Desktop/SEI-28/Project/project-2/src/pages/TrafficCam.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TrafficCard from \"../components/TrafficCard\";\nimport CamLocation from \"../CameraLocation\";\nimport CheckBoxes from \"../components/CheckBoxes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst area = [\"All\"];\n\nfor (const element of CamLocation) {\n  if (area.indexOf(element.area) === -1) {\n    area.push(element.area); // console.log(area);\n  }\n}\n\nconst TrafficCam = () => {\n  _s();\n\n  const [trafficImg, setTrafficImg] = useState([]); // const [trafficFilterImg, useTrafficFilterImg] = useState([]);\n\n  const arrBool = Object.values(check);\n  const [check, setCheck] = useState(area.reduce((m, v) => {\n    v === \"All\" ? m[v] = true : m[v] = false;\n    return m;\n  }, {}));\n  console.log(trafficImg);\n  useEffect(() => {\n    const camImageUrl = \"https://api.data.gov.sg/v1/transport/traffic-images\";\n    axios.get(camImageUrl).then(res => {\n      // console.log(res.data.items[0].cameras);\n      setTrafficImg(res.data.items[0].cameras);\n    });\n  }, []);\n\n  const handleChange = event => {\n    setCheck({ ...check,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  for (const element of arrBool) {\n    if (element) {\n      console.log(element);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Traffic Cameras\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CheckBoxes, {\n        area: area,\n        check: check,\n        handleChange: handleChange,\n        arrBool: arrBool\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: trafficImg && trafficImg.map(element => CamLocation.map(item => {\n          // if ()\n          if (element.camera_id === item.camera_id) return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TrafficCard, {\n              img: element.image,\n              location: element.location,\n              id: element.camera_id,\n              road: item.location,\n              cluster: item.area\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this)\n          }, element.camera_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 12\n          }, this);\n        }) // if (element.camera_id === CamLocation)\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TrafficCam, \"JnPhsYWoMxciDv2QIA+k9kIymFw=\");\n\n_c = TrafficCam;\nexport default TrafficCam;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrafficCam\");","map":{"version":3,"sources":["/Users/shalahuddinali/Dropbox/My Mac (Shalahuddins-MacBook-Air.local)/Desktop/SEI-28/Project/project-2/src/pages/TrafficCam.js"],"names":["axios","React","useEffect","useState","Container","Box","Typography","Grid","TrafficCard","CamLocation","CheckBoxes","area","element","indexOf","push","TrafficCam","trafficImg","setTrafficImg","arrBool","Object","values","check","setCheck","reduce","m","v","console","log","camImageUrl","get","then","res","data","items","cameras","handleChange","event","target","name","checked","map","item","camera_id","image","location"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TrafficCard from \"../components/TrafficCard\";\nimport CamLocation from \"../CameraLocation\";\nimport CheckBoxes from \"../components/CheckBoxes\";\n\nconst area = [\"All\"];\nfor (const element of CamLocation) {\n\tif (area.indexOf(element.area) === -1) {\n\t\tarea.push(element.area);\n\t\t// console.log(area);\n\t}\n}\n\nconst TrafficCam = () => {\n\tconst [trafficImg, setTrafficImg] = useState([]);\n\t// const [trafficFilterImg, useTrafficFilterImg] = useState([]);\n\tconst arrBool = Object.values(check);\n\n\tconst [check, setCheck] = useState(\n\t\tarea.reduce((m, v) => {\n\t\t\tv === \"All\" ? (m[v] = true) : (m[v] = false);\n\t\t\treturn m;\n\t\t}, {})\n\t);\n\n\tconsole.log(trafficImg);\n\n\tuseEffect(() => {\n\t\tconst camImageUrl = \"https://api.data.gov.sg/v1/transport/traffic-images\";\n\n\t\taxios.get(camImageUrl).then((res) => {\n\t\t\t// console.log(res.data.items[0].cameras);\n\t\t\tsetTrafficImg(res.data.items[0].cameras);\n\t\t});\n\t}, []);\n\n\tconst handleChange = (event) => {\n\t\tsetCheck({ ...check, [event.target.name]: event.target.checked });\n\t};\n\n\tfor (const element of arrBool) {\n\t\tif (element) {\n\t\t\tconsole.log(element);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Container justify=\"center\">\n\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\n\t\t\t\t\t<Typography variant=\"h3\">Traffic Cameras</Typography>\n\t\t\t\t</Box>\n\t\t\t\t<CheckBoxes\n\t\t\t\t\tarea={area}\n\t\t\t\t\tcheck={check}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\tarrBool={arrBool}\n\t\t\t\t/>\n\n\t\t\t\t<Grid container>\n\t\t\t\t\t{trafficImg &&\n\t\t\t\t\t\ttrafficImg.map(\n\t\t\t\t\t\t\t(element) =>\n\t\t\t\t\t\t\t\tCamLocation.map((item) => {\n\t\t\t\t\t\t\t\t\t// if ()\n\t\t\t\t\t\t\t\t\tif (element.camera_id === item.camera_id)\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Grid item key={element.camera_id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TrafficCard\n\t\t\t\t\t\t\t\t\t\t\t\t\timg={element.image}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlocation={element.location}\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={element.camera_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\troad={item.location}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcluster={item.area}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t// if (element.camera_id === CamLocation)\n\t\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default TrafficCam;\n"]},"metadata":{},"sourceType":"module"}