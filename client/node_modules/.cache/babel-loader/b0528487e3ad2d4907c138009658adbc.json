{"ast":null,"code":"var _jsxFileName = \"/Users/shalahuddinali/Dropbox/My Mac (Shalahuddins-MacBook-Air.local)/Desktop/SEI-28/Project/project-2/src/App.js\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport availData from \"./components/test_data\";\nimport queryData from \"./components/data_test\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [cpLocation, setCPLocation] = useState(\"\");\n  // const [cpAvail, setCPAvail] = useState(\"\");\n  // const url = `https://api.data.gov.sg/v1/transport/carpark-availability`;\n  // useEffect(() => {\n  // \taxios.get(url).then((res) => {\n  // \t\tconsole.log(res.data.items[0].carpark_data[1]);\n  // \t});\n  // }, [cpLocation]);\n  console.log(queryData.result.records);\n  const qData = queryData.result.records;\n  let qResult = qData.map(element => {\n    return {\n      address: element.address,\n      nonSeasonLot: element.short_term_parking,\n      freeParking: element.free_parking,\n      cParkId: element.car_park_no\n    };\n  });\n  console.log(\"before\", qResult);\n  let cPDataArr = availData.items[0].carpark_data;\n  const newData = [];\n\n  for (const item of qResult) {\n    for (const element of cPDataArr) {\n      if (item.cParkId === element.carpark_number) {\n        // console.log(qResult.indexOf(item));\n        newData.push({\n          address: item.address,\n          availableLots: element.carpark_info[0].lots_available,\n          totalLots: element.carpark_info[0].total_lots,\n          nonSeasonLot: item.nonSeasonLot,\n          freeParking: item.freeParking,\n          cpId: item.cParkId\n        });\n      }\n    }\n  }\n\n  console.log(\"after\", newData); // console.log(cPDataArr);\n  // const [inputt, setInputt] = useState(\"ABCD\");\n  // const [justText, setJustText] = useState(true);\n  // const handleClick = () => {\n  // \tsetJustText(true);\n  // };\n  // const handleChange = (e) => {\n  // \tconsole.log(e.target.value);\n  // \tsetInputt(e.target.value);\n  // };\n  // const handleDblClick = () => {\n  // \tsetInputt(\"\");\n  // \tsetJustText(false);\n  // };\n  // if (justText) {\n  // \treturn <h1 onDoubleClick={handleDblClick}>{inputt}</h1>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shalahuddinali/Dropbox/My Mac (Shalahuddins-MacBook-Air.local)/Desktop/SEI-28/Project/project-2/src/App.js"],"names":["axios","React","useState","useEffect","availData","queryData","App","console","log","result","records","qData","qResult","map","element","address","nonSeasonLot","short_term_parking","freeParking","free_parking","cParkId","car_park_no","cPDataArr","items","carpark_data","newData","item","carpark_number","push","availableLots","carpark_info","lots_available","totalLots","total_lots","cpId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,GAAT,GAAe;AACd;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,MAAV,CAAiBC,OAA7B;AAEA,QAAMC,KAAK,GAAGN,SAAS,CAACI,MAAV,CAAiBC,OAA/B;AACA,MAAIE,OAAO,GAAGD,KAAK,CAACE,GAAN,CAAWC,OAAD,IAAa;AACpC,WAAO;AACNC,MAAAA,OAAO,EAAED,OAAO,CAACC,OADX;AAENC,MAAAA,YAAY,EAAEF,OAAO,CAACG,kBAFhB;AAGNC,MAAAA,WAAW,EAAEJ,OAAO,CAACK,YAHf;AAINC,MAAAA,OAAO,EAAEN,OAAO,CAACO;AAJX,KAAP;AAMA,GAPa,CAAd;AASAd,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,OAAtB;AAEA,MAAIU,SAAS,GAAGlB,SAAS,CAACmB,KAAV,CAAgB,CAAhB,EAAmBC,YAAnC;AACA,QAAMC,OAAO,GAAG,EAAhB;;AACA,OAAK,MAAMC,IAAX,IAAmBd,OAAnB,EAA4B;AAC3B,SAAK,MAAME,OAAX,IAAsBQ,SAAtB,EAAiC;AAChC,UAAII,IAAI,CAACN,OAAL,KAAiBN,OAAO,CAACa,cAA7B,EAA6C;AAC5C;AACAF,QAAAA,OAAO,CAACG,IAAR,CAAa;AACZb,UAAAA,OAAO,EAAEW,IAAI,CAACX,OADF;AAEZc,UAAAA,aAAa,EAAEf,OAAO,CAACgB,YAAR,CAAqB,CAArB,EAAwBC,cAF3B;AAGZC,UAAAA,SAAS,EAAElB,OAAO,CAACgB,YAAR,CAAqB,CAArB,EAAwBG,UAHvB;AAIZjB,UAAAA,YAAY,EAAEU,IAAI,CAACV,YAJP;AAKZE,UAAAA,WAAW,EAAEQ,IAAI,CAACR,WALN;AAMZgB,UAAAA,IAAI,EAAER,IAAI,CAACN;AANC,SAAb;AAQA;AACD;AACD;;AAEDb,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBiB,OAArB,EA5Cc,CA8Cd;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,sBACC;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADD;AAMA;;KA1EQnB,G;AA4ET,eAAeA,GAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport availData from \"./components/test_data\";\nimport queryData from \"./components/data_test\";\n\nfunction App() {\n\t// const [cpLocation, setCPLocation] = useState(\"\");\n\t// const [cpAvail, setCPAvail] = useState(\"\");\n\n\t// const url = `https://api.data.gov.sg/v1/transport/carpark-availability`;\n\n\t// useEffect(() => {\n\t// \taxios.get(url).then((res) => {\n\t// \t\tconsole.log(res.data.items[0].carpark_data[1]);\n\t// \t});\n\t// }, [cpLocation]);\n\n\tconsole.log(queryData.result.records);\n\n\tconst qData = queryData.result.records;\n\tlet qResult = qData.map((element) => {\n\t\treturn {\n\t\t\taddress: element.address,\n\t\t\tnonSeasonLot: element.short_term_parking,\n\t\t\tfreeParking: element.free_parking,\n\t\t\tcParkId: element.car_park_no,\n\t\t};\n\t});\n\n\tconsole.log(\"before\", qResult);\n\n\tlet cPDataArr = availData.items[0].carpark_data;\n\tconst newData = [];\n\tfor (const item of qResult) {\n\t\tfor (const element of cPDataArr) {\n\t\t\tif (item.cParkId === element.carpark_number) {\n\t\t\t\t// console.log(qResult.indexOf(item));\n\t\t\t\tnewData.push({\n\t\t\t\t\taddress: item.address,\n\t\t\t\t\tavailableLots: element.carpark_info[0].lots_available,\n\t\t\t\t\ttotalLots: element.carpark_info[0].total_lots,\n\t\t\t\t\tnonSeasonLot: item.nonSeasonLot,\n\t\t\t\t\tfreeParking: item.freeParking,\n\t\t\t\t\tcpId: item.cParkId,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.log(\"after\", newData);\n\n\t// console.log(cPDataArr);\n\n\t// const [inputt, setInputt] = useState(\"ABCD\");\n\t// const [justText, setJustText] = useState(true);\n\n\t// const handleClick = () => {\n\t// \tsetJustText(true);\n\t// };\n\n\t// const handleChange = (e) => {\n\t// \tconsole.log(e.target.value);\n\t// \tsetInputt(e.target.value);\n\t// };\n\n\t// const handleDblClick = () => {\n\t// \tsetInputt(\"\");\n\t// \tsetJustText(false);\n\t// };\n\n\t// if (justText) {\n\t// \treturn <h1 onDoubleClick={handleDblClick}>{inputt}</h1>;\n\t// }\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{/* <input value={inputt} onChange={handleChange} />\n\t\t\t<button onClick={handleClick}>Confirm</button> */}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}